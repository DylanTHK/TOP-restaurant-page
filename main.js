(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>s});var a=t(537),r=t.n(a),o=t(645),c=t.n(o)()(r());c.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap);"]),c.push([n.id,":root {\n    --primary-color: rgba(255,97,97);\n    --secondary-color: rgba(141,190,178);\n    --primary-text-color: rgb(72, 58, 62);\n    --secondary-text-color: rgba(255,255,255);\n    --vertical-gap: 2rem;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    font-family: 'Montserrat', sans-serif;\n    color: var(--primary-text-color);\n    /* font-size: calc(0.625rem + 0.4vw); */\n    font-size: calc(.9rem + 0.4vw);\n}\n\n#content {\n    display: flex;\n    flex-direction: column;\n    padding: 3rem;\n    margin: 0 10%;\n    align-items: center;\n    background-color: var(--primary-color);\n    height: auto;\n}\n\nheader {\n    display: flex;\n    font-size: 2rem;\n    font-weight: 700;\n}\n\nheader,\nimg#karen-icon,\nh1,\n.sections {\n    padding-bottom: var(--vertical-gap);\n}\n\n.footer {\n    padding-top: var(--vertical-gap);\n    display: flex;\n}\n\n.fa-github {\n    padding: 0 1rem;\n    color: var(--primary-text-color);\n    transform: scale(1.5);\n}\n\n.header-tabs {\n     padding: .5rem 1rem;\n     margin: 0 1rem;\n     border-radius: .5rem;\n     font-size: smaller;\n     font-weight: 400;\n}\n\n.header-tabs:hover {\n    transform: scale(1.2);\n}\n\n.active {\n    background-color: var(--secondary-color);\n}\n\n.main-content {\n    background: var(--secondary-color);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 2rem 5rem;\n    border-radius: 2rem;\n}\n\nimg#karen-icon {\n    height: auto;\n    width: 200px;\n}\n\n\n.sections {\n    text-align: center;\n}\n\n.section-head {\n    font-weight: 700;\n}\n\n.menu-image,\n.map-image {\n    height: auto;\n    width: 400px;\n}\n\n.links {\n    display: flex;\n    align-items: center;\n    color: var(--primary-text-color);\n    padding-bottom: 2rem;\n}\n\n.fa-brands,\n.fa-solid {\n    padding-right: 1rem;\n}\n\n.fa-instagram {\n    transform: scale(1.5);\n}\n\n.map {\n    flex-direction: column;\n}\n\n.map-image {\n    padding: 1rem 0;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AACA;IACI,gCAAgC;IAChC,oCAAoC;IACpC,qCAAqC;IACrC,yCAAyC;IACzC,oBAAoB;AACxB;;AAEA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,qCAAqC;IACrC,gCAAgC;IAChC,uCAAuC;IACvC,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,aAAa;IACb,mBAAmB;IACnB,sCAAsC;IACtC,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,eAAe;IACf,gBAAgB;AACpB;;AAEA;;;;IAII,mCAAmC;AACvC;;AAEA;IACI,gCAAgC;IAChC,aAAa;AACjB;;AAEA;IACI,eAAe;IACf,gCAAgC;IAChC,qBAAqB;AACzB;;AAEA;KACK,mBAAmB;KACnB,cAAc;KACd,oBAAoB;KACpB,kBAAkB;KAClB,gBAAgB;AACrB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,wCAAwC;AAC5C;;AAEA;IACI,kCAAkC;IAClC,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,YAAY;AAChB;;;AAGA;IACI,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;;IAEI,YAAY;IACZ,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,gCAAgC;IAChC,oBAAoB;AACxB;;AAEA;;IAEI,mBAAmB;AACvB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,eAAe;AACnB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap');\n:root {\n    --primary-color: rgba(255,97,97);\n    --secondary-color: rgba(141,190,178);\n    --primary-text-color: rgb(72, 58, 62);\n    --secondary-text-color: rgba(255,255,255);\n    --vertical-gap: 2rem;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    font-family: 'Montserrat', sans-serif;\n    color: var(--primary-text-color);\n    /* font-size: calc(0.625rem + 0.4vw); */\n    font-size: calc(.9rem + 0.4vw);\n}\n\n#content {\n    display: flex;\n    flex-direction: column;\n    padding: 3rem;\n    margin: 0 10%;\n    align-items: center;\n    background-color: var(--primary-color);\n    height: auto;\n}\n\nheader {\n    display: flex;\n    font-size: 2rem;\n    font-weight: 700;\n}\n\nheader,\nimg#karen-icon,\nh1,\n.sections {\n    padding-bottom: var(--vertical-gap);\n}\n\n.footer {\n    padding-top: var(--vertical-gap);\n    display: flex;\n}\n\n.fa-github {\n    padding: 0 1rem;\n    color: var(--primary-text-color);\n    transform: scale(1.5);\n}\n\n.header-tabs {\n     padding: .5rem 1rem;\n     margin: 0 1rem;\n     border-radius: .5rem;\n     font-size: smaller;\n     font-weight: 400;\n}\n\n.header-tabs:hover {\n    transform: scale(1.2);\n}\n\n.active {\n    background-color: var(--secondary-color);\n}\n\n.main-content {\n    background: var(--secondary-color);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 2rem 5rem;\n    border-radius: 2rem;\n}\n\nimg#karen-icon {\n    height: auto;\n    width: 200px;\n}\n\n\n.sections {\n    text-align: center;\n}\n\n.section-head {\n    font-weight: 700;\n}\n\n.menu-image,\n.map-image {\n    height: auto;\n    width: 400px;\n}\n\n.links {\n    display: flex;\n    align-items: center;\n    color: var(--primary-text-color);\n    padding-bottom: 2rem;\n}\n\n.fa-brands,\n.fa-solid {\n    padding-right: 1rem;\n}\n\n.fa-instagram {\n    transform: scale(1.5);\n}\n\n.map {\n    flex-direction: column;\n}\n\n.map-image {\n    padding: 1rem 0;\n}\n"],sourceRoot:""}]);const s=c},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,r,o){"string"==typeof n&&(n=[[null,n,void 0]]);var c={};if(a)for(var s=0;s<this.length;s++){var i=this[s][0];null!=i&&(c[i]=!0)}for(var d=0;d<n.length;d++){var A=[].concat(n[d]);a&&c[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),e.push(A))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(r," */"),c=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(c).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var o={},c=[],s=0;s<n.length;s++){var i=n[s],d=a.base?i[0]+a.base:i[0],A=o[d]||0,l="".concat(d," ").concat(A);o[d]=A+1;var m=t(l),p={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==m)e[m].references++,e[m].updater(p);else{var u=r(p,a);a.byIndex=s,e.splice(s,0,{identifier:l,updater:u,references:1})}c.push(l)}return c}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var o=a(n=n||[],r=r||{});return function(n){n=n||[];for(var c=0;c<o.length;c++){var s=t(o[c]);e[s].references--}for(var i=a(n,r),d=0;d<o.length;d++){var A=t(o[d]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}o=i}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,r&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(a){var r=e[a];if(void 0!==r)return r.exports;var o=e[a]={id:a,exports:{}};return n[a](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),a=t(795),r=t.n(a),o=t(569),c=t.n(o),s=t(565),i=t.n(s),d=t(216),A=t.n(d),l=t(589),m=t.n(l),p=t(426),u={};function g(){const n=document.querySelector(".main-content");n.textContent="";const e=document.createElement("img");e.id="karen-icon",e.src="./src/images/karen.png",e.alt="Karen Emoji";const t=document.createElement("div");t.classList.add("motto","sections"),["Our Motto","Great Burgers & Rude Service","Get Ready to live out your","Karen Dreams"].forEach((n=>{const e=document.createElement("p");"Our Motto"===n&&e.classList.add("section-head"),e.textContent=n,t.append(e)}));const a=document.createElement("div");a.classList.add("ops-hours","sections"),["Operating Hours","Yes"].forEach((n=>{const e=document.createElement("p");"Operating Hours"===n&&e.classList.add("section-head"),e.textContent=n,a.append(e)})),n.append(e,t,a)}function C(n,e){const t=document.createElement("div");t.classList.add("sections");const a=document.createElement("p");a.classList.add("section-head"),a.textContent=n;const r=document.createElement("img");r.classList.add("menu-image"),r.src=`./src/images/${n.toLowerCase().replaceAll(" ","-")}.jpeg`,r.alt=n;const o=document.createElement("p");return o.textContent=e,t.append(a,r,o),t}u.styleTagTransform=m(),u.setAttributes=i(),u.insert=c().bind(null,"head"),u.domAPI=r(),u.insertStyleElement=A(),e()(p.Z,u),p.Z&&p.Z.locals&&p.Z.locals;function f(n){document.querySelectorAll(".header-tabs").forEach((e=>{e!==n&&e.classList.remove("active")})),n.classList.add("active")}!function(){const n=document.querySelector("#content"),e=function(){const n=document.createElement("h1");return n.textContent="Karen's Kafe",n}(),t=function(){const n=document.createElement("header"),e=document.createElement("div");e.textContent="Home",e.classList.add("header-tabs","active"),e.addEventListener("click",(n=>{n.target.classList.contains("active")||(f(n.target),g())}));const t=document.createElement("div");t.textContent="Menu",t.classList.add("header-tabs"),t.addEventListener("click",(n=>{n.target.classList.contains("active")||(f(n.target),function(){const n=document.querySelector(".main-content");n.textContent="",document.querySelectorAll("#content");const e=C("The Basic Karen","Why else are you here?"),t=C("Karen Fries","Why else are you here?"),a=C("Karen Milkshake","Why else are you here?");n.append(e,t,a)}())}));const a=document.createElement("div");return a.textContent="Contact",a.classList.add("header-tabs"),a.addEventListener("click",(n=>{n.target.classList.contains("active")||(f(n.target),function(){const n=document.querySelector(".main-content");n.textContent="";const e=document.createElement("h1");e.textContent="Contact Us",e.classList.add("section-head");const t=document.createElement("a"),a=document.createElement("i"),r=document.createElement("p");t.classList.add("links"),a.classList.add("fa-brands","fa-instagram"),r.textContent="Instagram",t.append(a,r);const o=document.createElement("a"),c=document.createElement("i"),s=document.createElement("p");o.classList.add("links"),c.classList.add("fa-solid","fa-phone"),s.textContent="#123456789",o.append(c,s);const i=document.createElement("a");i.classList.add("links","map"),i.textContent="Having trouble with google maps in 2022?";const d=document.createElement("img");d.src="./src/images/karen-location.png",d.alt="Google Maps Location",d.classList.add("map-image"),i.appendChild(d),n.append(e,t,o,i)}())})),n.append(e,t,a),n}(),a=function(){const n=document.createElement("div");return n.classList.add("main-content"),n}(),r=function(){const n=document.createElement("footer");n.classList.add("footer");const e=document.createElement("p");e.textContent="Copyright © 2022 DylanTHK";const t=document.createElement("a");t.href="https://github.com/DylanTHK",t.target="blank_";const a=document.createElement("i");return a.classList.add("fab"),a.classList.add("fa-github"),t.appendChild(a),n.appendChild(e),n.appendChild(t),n}();n.append(e,t,a,r),g()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,